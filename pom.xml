<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>srdc.stage</groupId>
    <artifactId>smartcds</artifactId>
    <version>1.0</version>
    <name>STAGE Smart CDS</name>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>

        <!-- plugin versions -->
        <scala.maven.plugin.version>3.4.1</scala.maven.plugin.version>
        <jar.plugin.version>3.1.0</jar.plugin.version>
        <onejar.plugin.version>1.4.4</onejar.plugin.version>
        <surefire.plugin.version>2.19.1</surefire.plugin.version>
        <spotify.docker.plugin.version>0.4.3</spotify.docker.plugin.version>
        <jackson.version>2.9.6</jackson.version>

        <!-- dependency versions -->
        <scala.version>2.12.8</scala.version>
        <scala.binary.version>2.12</scala.binary.version>
        <specs2.version>4.10.5</specs2.version>
        <logback.logstash.encoder.version>5.3</logback.logstash.encoder.version>
        <onfhir.version>3.2-SNAPSHOT</onfhir.version>
        <akka-http.version>10.2.0</akka-http.version>
        <akka.version>2.6.8</akka.version>
        <json4s.version>4.0.3</json4s.version>
        <nimbus.version>9.31</nimbus.version>

    </properties>

    <build>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>

        <plugins>
            <!-- Allows compiling/testing/running/documenting Scala code in Maven. -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala.maven.plugin.version}</version>
                <configuration>
                    <scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
                    <args>
                        <arg>-deprecation</arg>
                        <arg>-feature</arg>
                    </args>
                </configuration>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Used for setting the main class for the generated jars -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>${jar.plugin.version}</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>srdc.smartcds.Boot</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>

            <!-- Generates an executable uber-jar with Maven, containing all dependencies. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <exclude>META-INF/*.SF</exclude>
                                        <exclude>META-INF/*.DSA</exclude>
                                        <exclude>META-INF/*.RSA</exclude>
                                        <exclude>META-INF/log4j-provider.properties</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                            <finalName>stage-smart-cds</finalName>
                            <transformers>
                                <!-- add Main-Class to manifest file -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>srdc.smartcds.Boot</mainClass>
                                </transformer>

                                <!-- Append application.conf to jar configurations-->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>application.conf</resource>
                                </transformer>

                                <!-- Append reference.conf to jar configurations for Akka to run -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>reference.conf</resource>
                                </transformer>

                                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Used during the test phase of the build lifecycle to execute the unit tests of an application.
             Allows us to run Specs2 tests written in Scala -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Spec.*</include>
                        <include>**/When*.*</include>
                        <include>**/*Test.*</include>
                        <include>**/*Suite.*</include>
                    </includes>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <!-- Scala Language -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <!-- FHIR repository-->
        <dependency>
            <groupId>io.onfhir</groupId>
            <artifactId>onfhir-server-r4</artifactId>
            <version>${onfhir.version}</version>
        </dependency>
        <dependency>
            <groupId>io.onfhir</groupId>
            <artifactId>onfhir-common</artifactId>
            <version>${onfhir.version}</version>
        </dependency>
        <dependency>
            <groupId>io.onfhir</groupId>
            <artifactId>onfhir-core</artifactId>
            <version>${onfhir.version}</version>
        </dependency>
        <dependency>
            <groupId>io.onfhir</groupId>
            <artifactId>onfhir-operations</artifactId>
            <version>${onfhir.version}</version>
        </dependency>
        <dependency>
            <groupId>io.onfhir</groupId>
            <artifactId>onfhir-cds</artifactId>
            <version>1.0-SNAPSHOT</version>
        </dependency>

        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>core</artifactId>
            <version>3.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.google.zxing</groupId>
            <artifactId>javase</artifactId>
            <version>3.3.0</version>
        </dependency>

        <!-- Excel -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
            <version>5.2.3</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
            <version>5.2.3</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-scala_2.12</artifactId>
            <version>${jackson.version}</version>
        </dependency>

        <dependency>
            <groupId>net.logstash.logback</groupId>
            <artifactId>logstash-logback-encoder</artifactId>
            <version>${logback.logstash.encoder.version}</version>
        </dependency>

        <dependency>
            <groupId>org.json4s</groupId>
            <artifactId>json4s-native_2.12</artifactId>
            <version>${json4s.version}</version>
        </dependency>

        <!-- JWT token generation -->
        <dependency>
            <groupId>com.nimbusds</groupId>
            <artifactId>nimbus-jose-jwt</artifactId>
            <version>${nimbus.version}</version>
        </dependency>

        <!--Testing toolkits for Akka-->
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-testkit_${scala.binary.version}</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-http-testkit_${scala.binary.version}</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- Unit Testing -->
        <dependency>
            <groupId>org.specs2</groupId>
            <artifactId>specs2-core_2.12</artifactId>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.specs2</groupId>
            <artifactId>specs2-junit_2.12</artifactId>
            <scope>provided</scope>
        </dependency>
    </dependencies>

    <dependencyManagement>
        <dependencies>

            <!--Testing toolkits for Akka-->
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-testkit_${scala.binary.version}</artifactId>
                <version>${akka.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.typesafe.akka</groupId>
                <artifactId>akka-http-testkit_${scala.binary.version}</artifactId>
                <version>${akka-http.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Unit Testing -->
            <dependency>
                <groupId>org.specs2</groupId>
                <artifactId>specs2-core_${scala.binary.version}</artifactId>
                <version>${specs2.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.specs2</groupId>
                <artifactId>specs2-junit_${scala.binary.version}</artifactId>
                <version>${specs2.version}</version>
                <scope>provided</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <repositories>
        <repository>
            <id>oss-snapshots</id>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
        <repository>
            <id>maven-releases</id>
            <url>https://nexus.srdc.com.tr/repository/maven-releases/</url>
        </repository>
        <repository>
            <id>maven-snapshots</id>
            <url>https://nexus.srdc.com.tr/repository/maven-snapshots/</url>
        </repository>
    </repositories>

    <distributionManagement>
        <snapshotRepository>
            <id>maven-snapshots</id>
            <url>https://nexus.srdc.com.tr/repository/maven-snapshots/</url>
        </snapshotRepository>
        <repository>
            <id>maven-releases</id>
            <url>https://nexus.srdc.com.tr/repository/maven-releases/</url>
        </repository>
    </distributionManagement>

</project>
